document.addEventListener('DOMContentLoaded', function () {
    const btnSave = document.getElementById('btnSave');
    const pfpInput = document.getElementById('pfp');
    const iconUser = document.getElementById('usericon');

    if (btnSave) {
        btnSave.addEventListener('click', save);
    } else {
        console.error("A '#btnSave' azonos√≠t√≥j√∫ gomb nem tal√°lhat√≥.");
    }

    // Itt h√≠vjuk meg a getpfp f√ºggv√©nyt, mivel m√°r bet√∂lt≈ëd√∂tt a DOM
    getpfp();

    const btnCancel = document.getElementById('megse');

    if (btnCancel) {
        btnCancel.addEventListener('click', () => {
            window.location.href = '../home.html';
        });
    } else {
        console.error("Hiba: A 'megse' ID-j≈± gomb nem tal√°lhat√≥.");
    }

    // üîπ √öJ FUNKCI√ì: Profilk√©p el≈ën√©zet megjelen√≠t√©se azonnal a f√°jl kiv√°laszt√°sa ut√°n
    if (pfpInput) {
        pfpInput.addEventListener('change', function (event) {
            const file = event.target.files[0];

            if (file) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    iconUser.src = e.target.result; // Be√°ll√≠tja az √∫j k√©pet az <img> elemre
                };

                reader.readAsDataURL(file); // F√°jl olvas√°sa √©s el≈ën√©zet gener√°l√°sa
            }
        });
    }
});

async function save() {
    const nameInput = document.getElementById('name');
    const pswInput = document.getElementById('psw');
    const pfpInput = document.getElementById('pfp');

    if (!nameInput || !pswInput || !pfpInput) {
        console.error("Nem tal√°lhat√≥ az egyik input elem.");
        return;
    }

    const name = nameInput.value.trim();
    const psw = pswInput.value;
    const pfp = pfpInput.files[0];

    // üîπ HIBA√úZENET HOZZ√ÅAD√ÅSA: Ha a felhaszn√°l√≥n√©v √ºres, figyelmeztet√©s jelenjen meg
    if (name === "") {
        alert("Hiba: A felhaszn√°l√≥n√©v nem lehet √ºres!");
        return;
    }

    const formData = new FormData();
    formData.append('name', name);
    formData.append('psw', psw);
    if (pfp) {
        formData.append('pfp', pfp);
    }

    try {
        const res = await fetch('/api/editProfile', {
            method: 'PUT',
            body: formData,
            credentials: 'include'
        });

        const text = await res.text();
        console.log("Szerver v√°lasza:", text);

        try {
            const data = JSON.parse(text);

            if (res.ok) {
                alert(data.message);
                window.location.href = '../home.html';
            } else if (data.errors) {
                let errorMessage = data.errors.map(err => err.error).join('\n');
                alert(errorMessage);
            } else if (data.error) {
                alert(data.error);
            } else {
                alert('Ismeretlen hiba');
            }
        } catch (jsonError) {
            console.error("Nem JSON v√°laszt kaptunk:", text);
            alert("Hib√°s v√°lasz √©rkezett a szervert≈ël.");
        }
    } catch (error) {
        console.error('Hiba t√∂rt√©nt:', error);
        alert('H√°l√≥zati hiba vagy szerverhiba t√∂rt√©nt.');
    }
}

// üîπ A PROFILK√âP MEGJELEN√çT√âSE AZ OLDALON
async function getpfp() {
    try {
        const res = await fetch('/api/getpfp', {
            method: 'GET',
            credentials: 'include'
        });

        const data = await res.json();
        console.log(data);
        
        if (res.ok) {
            const iconUser = document.getElementById('usericon');
            if (iconUser) {
                // Ellen≈ërizz√ºk, hogy van-e pfp az adatokban
                if (data[0]?.pfp) {
                    iconUser.src = `/foods/${data[0].pfp}`;
                    iconUser.alt = data[0].pfp;
                } else {
                    console.log("Nincs profilk√©p az adatokban");
                    // Itt be√°ll√≠thatunk egy alap√©rtelmezett k√©pet
                    iconUser.src = "/fotok/logo.png";
                }
            }
        }
    } catch (error) {
        console.error('Hiba a profilk√©p bet√∂lt√©sekor:', error);
    }
}
